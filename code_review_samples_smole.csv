id,language,fix_status,full_file,file_diff,expected_smells
1,DotNet,before_fix,"public void Save() {
    var client = new HttpClient();
    var result = client.GetAsync(""http://localhost:5000/test"").Result;
}","- var result = client.GetAsync(""http://localhost:5000/test"").Result;
+ var result = await client.GetAsync(""https://api.example.com/test"");","async,hardcoded_localhost"
2,DotNet,after_fix,"public async Task SaveAsync() {
    var client = new HttpClient();
    var result = await client.GetAsync(""https://api.example.com/test"");
}","N/A","none"
3,Angular,before_fix,"ngOnInit() {
    this.subscription = this.service.getData().subscribe(data => {
        this.data = data;
    });
}","- this.subscription = this.service.getData().subscribe(...)
+ this.store.select(selectData).subscribe(...);","unsubscribed_observable,state_management_violation"
4,Angular,after_fix,"ngOnInit() {
    this.data$ = this.store.select(selectData);
}","N/A","none"
5,DotNet,before_fix,"public void Process() {
    if (user != null) {
        if (user.Address != null) {
            if (user.Address.Zip != null) {
                Console.WriteLine(user.Address.Zip);
            }
        }
    }
}","- if (user != null) {
-     if (user.Address != null) {
-         if (user.Address.Zip != null) {
+ if (user?.Address?.Zip != null) {","deep_nesting"
6,DotNet,after_fix,"public void Process() {
    if (user?.Address?.Zip != null) {
        Console.WriteLine(user.Address.Zip);
    }
}","N/A","none"
7,Angular,before_fix,"let value = 5;
if (value == null) {
  console.log('Value is null');
}","- if (value == null)
+ if (!value)","null_check"
8,DotNet,before_fix,"// var test = service.GetTest();
// Console.WriteLine(test);","- // var test = service.GetTest();
- // Console.WriteLine(test);","commented_code"
9,DotNet,before_fix,"public void Unused() {
    var unused = 42;
}","N/A","unused_code"
10,Angular,before_fix,"const val = 10;
const val2 = 10;","N/A","duplicate_code"
11,Angular,after_fix,"const val = 10;","- const val2 = 10;","none"
12,DotNet,before_fix,"try {
    var result = service.Call();
} catch {}","- catch {}
+ catch(Exception ex) { Log.Error(ex); }","exception"
id,language,fix_status,full_file,file_diff,expected_smells
13,Angular,before_fix,"ngOnInit() {
  this.service.setUser(user);
}","- this.service.setUser(user);
+ this.store.dispatch(setUser({ user }));","state_management_violation"
14,Angular,after_fix,"ngOnInit() {
  this.store.dispatch(setUser({ user }));
}","N/A","none"
15,DotNet,before_fix,"public void Calculate() {
    var a = 5;
    var b = 5;
    var c = 10;
}","- var a = 5;
- var b = 5;","duplicate_code"
16,Angular,before_fix,"getData() {
  const data = this.service.getItems();
  return data;
}","- const data = this.service.getItems();
+ return this.service.getItems();","structural_duplication"
17,DotNet,before_fix,"public void Test() {
    // testing line
    // logger.Log(""test done"");
}","- // testing line
- // logger.Log(""test done"");","commented_code"
18,Angular,before_fix,"const config = {
  url: ""http://localhost:4200/api"",
  retry: 3
};","- url: ""http://localhost:4200/api""
+ url: environment.apiUrl","hardcoded_localhost"
19,DotNet,before_fix,"if (result != null) {
    if (result.Data != null) {
        Process(result.Data);
    }
}","- if (result != null)
- if (result.Data != null)
+ if (result?.Data != null)","deep_nesting"
20,Angular,before_fix,"ngOnInit() {
  this.service.getData().subscribe((res) => {
    this.data = res;
  });
}","- this.service.getData().subscribe((res) => { this.data = res; });
+ this.data$ = this.store.select(selectData);","unsubscribed_observable,state_management_violation"
21,DotNet,before_fix,"public void Handle() {
  try {
    var x = riskyOp();
  } catch { }
}","- catch { }
+ catch(Exception ex) { logger.LogError(ex); }","exception"
22,Angular,before_fix,"if (data != null) {
  if (data.value != null) {
    console.log(data.value);
  }
}","- if (data != null)
- if (data.value != null)
+ if (data?.value)","deep_nesting"
23,Angular,before_fix,"const unused = 'value';","N/A","unused_code"
24,DotNet,before_fix,"public void DuplicateStuff() {
  DoWork();
  DoWork();
}","- DoWork();
- DoWork();","duplicate_code"
25,Angular,before_fix,"setTimeout(() => this.loadData(), 0);","- setTimeout(() => this.loadData(), 0);
+ Promise.resolve().then(() => this.loadData());","async"
id,language,fix_status,full_file,file_diff,expected_smells
26,Angular,before_fix,"constructor(private http: HttpClient) {}
fetch() {
  return this.http.get('http://localhost:3000/items');
}","- return this.http.get('http://localhost:3000/items');
+ return this.http.get(environment.apiUrl + '/items');","hardcoded_localhost"
27,Angular,after_fix,"constructor(private http: HttpClient) {}
fetch() {
  return this.http.get(environment.apiUrl + '/items');
}","N/A","none"
28,DotNet,before_fix,"public void LogUser() {
  // Console.WriteLine(""Testing only"");
}","- // Console.WriteLine(""Testing only"");","commented_code"
29,DotNet,after_fix,"public void LogUser() {
}","N/A","none"
30,Angular,before_fix,"ngOnInit() {
  const item = this.service.getItem();
  this.value = item?.value ?? 'default';
}","- const item = this.service.getItem();
- this.value = item?.value ?? 'default';
+ this.value$ = this.store.select(selectItemValue);","state_management_violation"
31,DotNet,before_fix,"public void GetInfo() {
  if (user != null) {
    if (user.Profile != null) {
      if (user.Profile.Address != null) {
        Console.WriteLine(user.Profile.Address.Street);
      }
    }
  }
}","- Multiple nested null checks
+ Use null-conditional operators instead","deep_nesting"
32,DotNet,after_fix,"public void GetInfo() {
  Console.WriteLine(user?.Profile?.Address?.Street);
}","N/A","none"
33,Angular,before_fix,"const item = {
  name: 'sample',
  name: 'sample'
};","- Duplicate key assignment","duplicate_code"
34,Angular,after_fix,"const item = {
  name: 'sample'
};","N/A","none"
35,DotNet,before_fix,"public void Update() {
  UpdateState();
  UpdateState();
}","- UpdateState();
- UpdateState();","duplicate_code"
36,DotNet,after_fix,"public void Update() {
  UpdateState();
}","N/A","none"
37,Angular,before_fix,"ngOnInit() {
  this.service.get().subscribe(data => {
    this.localData = data;
  });
}","- this.service.get().subscribe...
+ this.localData$ = this.store.select(...);","unsubscribed_observable,state_management_violation"
38,Angular,after_fix,"ngOnInit() {
  this.localData$ = this.store.select(selectData);
}","N/A","none"
39,DotNet,before_fix,"public void Load() {
  var debug = true;
  var prod = false;
  var debug = true;
}","- var debug = true; (duplicated)
- unused variables","duplicate_code,unused_code"
40,DotNet,after_fix,"public void Load() {
}","N/A","none"
